# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  _fullname: String
  address: String!
  balance: BigInt!
  fire: BigInt!
  id: ID!
  isMiner: Boolean!
  isPayoutTarget: Boolean!
  lastUpdate: DateTime!
  minedRewards: [Reward!]!
  minerScore: Float!
  minerState: String!
  receivedRewards: [Reward!]!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values. BigInt can represent values between -(2^53) + 1 and 2^53 - 1. 
"""
scalar BigInt

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

enum PayoutReason {
  Compute
  Online
}

type Query {
  getAccounts(addresses: [String!]!): [Account!]
  getMinersByPayoutTarget(payoutTarget: String!): [Account!]!
}

type Reward {
  _fullname: String
  date: DateTime!
  fire: BigInt!
  id: ID!
  miner: Account!
  payoutTarget: Account!
  reason: PayoutReason!
}
